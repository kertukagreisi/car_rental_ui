---
openapi: 3.0.3
info:
  title: car_rental_backend API
  version: 1.0-SNAPSHOT
paths:
  /bookings/all:
    get:
      tags:
        - Booking Endpoint
      responses:
        "200":
          description: OK
  /bookings/car/{carId}:
    get:
      tags:
        - Booking Endpoint
      parameters:
        - name: carId
          in: path
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          description: OK
  /bookings/create:
    post:
      tags:
        - Booking Endpoint
      parameters:
        - name: carId
          in: query
          schema:
            format: int64
            type: integer
        - name: userId
          in: query
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      responses:
        "200":
          description: OK
  /bookings/update:
    put:
      tags:
        - Booking Endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      responses:
        "200":
          description: OK
  /bookings/user/{userId}:
    get:
      tags:
        - Booking Endpoint
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          description: OK
  /bookings/{id}:
    delete:
      tags:
        - Booking Endpoint
      parameters:
        - name: id
          in: path
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          description: OK
  /cars/all:
    get:
      tags:
        - Car Endpoint
      responses:
        "200":
          description: OK
  /cars/create:
    post:
      tags:
        - Car Endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        "200":
          description: OK
  /cars/delete/{id}:
    delete:
      tags:
        - Car Endpoint
      parameters:
        - name: id
          in: path
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          description: OK
  /cars/get/{id}:
    get:
      tags:
        - Car Endpoint
      parameters:
        - name: id
          in: path
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          description: OK
  /cars/update:
    put:
      tags:
        - Car Endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        "200":
          description: OK
  /user/login:
    post:
      tags:
        - User Endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: OK
  /user/signUp:
    post:
      tags:
        - User Endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: OK
components:
  schemas:
    Booking:
      type: object
      properties:
        id:
          format: int64
          type: integer
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        price:
          format: int64
          type: integer
        car:
          $ref: '#/components/schemas/Car'
        user:
          $ref: '#/components/schemas/User'
    Brand:
      enum:
        - ALFA_ROMEO
        - AUDI
        - BMW
        - BUGATTI
        - FERRARI
        - FIAT
        - FORD
        - MERCEDES_BENZ
        - TOYOTA
        - VOLKSWAGEN
      type: string
    Car:
      type: object
      properties:
        id:
          format: int64
          type: integer
        model:
          type: string
        brand:
          $ref: '#/components/schemas/Brand'
        engine:
          type: string
        fuelType:
          $ref: '#/components/schemas/FuelType'
        doors:
          format: int32
          type: integer
        color:
          $ref: '#/components/schemas/Color'
        transmission:
          $ref: '#/components/schemas/Transmission'
        seats:
          format: int32
          type: integer
        year:
          format: int32
          type: integer
        licencePlate:
          type: string
    Color:
      enum:
        - BEIGE
        - BLACK
        - CHROME
        - GRAY
        - GREEN
        - RED
        - YELLOW
        - WHITE
      type: string
    Date:
      format: date
      type: string
      example: 2022-03-10
    FuelType:
      enum:
        - ELECTRIC
        - GAS
        - GASOLINE
        - GASOLINE_GAS
        - PETROL
      type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Transmission:
      enum:
        - MANUAL
        - AUTOMATIC
      type: string
    User:
      type: object
      properties:
        id:
          format: int64
          type: integer
        username:
          type: string
        password:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
    UserRole:
      enum:
        - ADMIN
        - USER
      type: string
